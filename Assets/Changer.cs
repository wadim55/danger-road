//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Changer.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Changer : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Changer()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Changer"",
    ""maps"": [
        {
            ""name"": ""ChangerCar"",
            ""id"": ""7f9c9726-747a-43e2-b9c6-795a8082b713"",
            ""actions"": [
                {
                    ""name"": ""audi"",
                    ""type"": ""Button"",
                    ""id"": ""be65c3b6-fef0-4245-b975-e5400dc295e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""volvo"",
                    ""type"": ""Value"",
                    ""id"": ""0ac6e1d1-2467-4f8d-857f-844d0c082e98"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Lada"",
                    ""type"": ""Button"",
                    ""id"": ""8bb207ff-e5f7-444b-998e-9fdc7d1f74c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Honda"",
                    ""type"": ""Button"",
                    ""id"": ""4e4d9326-bde8-4664-8d9b-503bca92a8e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Toyota"",
                    ""type"": ""Button"",
                    ""id"": ""d6d09470-d30d-4737-85b5-30334502219b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""75ecdf17-bd48-4848-98b5-24238aa33126"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Honda"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""323c51e3-202d-4b65-a106-0f6090381dcd"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""audi"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c174f0e4-9bb4-4185-bcc4-d11bdb36e351"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""audi"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1ee3cd6-429c-4297-bcf9-8df2bdaa973d"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""volvo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd3cb867-9a86-49cd-81a4-f1cef395ab35"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lada"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""745a0e87-2e40-416b-b511-4c1cc800dcc5"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Toyota"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ChangerCar
        m_ChangerCar = asset.FindActionMap("ChangerCar", throwIfNotFound: true);
        m_ChangerCar_audi = m_ChangerCar.FindAction("audi", throwIfNotFound: true);
        m_ChangerCar_volvo = m_ChangerCar.FindAction("volvo", throwIfNotFound: true);
        m_ChangerCar_Lada = m_ChangerCar.FindAction("Lada", throwIfNotFound: true);
        m_ChangerCar_Honda = m_ChangerCar.FindAction("Honda", throwIfNotFound: true);
        m_ChangerCar_Toyota = m_ChangerCar.FindAction("Toyota", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ChangerCar
    private readonly InputActionMap m_ChangerCar;
    private IChangerCarActions m_ChangerCarActionsCallbackInterface;
    private readonly InputAction m_ChangerCar_audi;
    private readonly InputAction m_ChangerCar_volvo;
    private readonly InputAction m_ChangerCar_Lada;
    private readonly InputAction m_ChangerCar_Honda;
    private readonly InputAction m_ChangerCar_Toyota;
    public struct ChangerCarActions
    {
        private @Changer m_Wrapper;
        public ChangerCarActions(@Changer wrapper) { m_Wrapper = wrapper; }
        public InputAction @audi => m_Wrapper.m_ChangerCar_audi;
        public InputAction @volvo => m_Wrapper.m_ChangerCar_volvo;
        public InputAction @Lada => m_Wrapper.m_ChangerCar_Lada;
        public InputAction @Honda => m_Wrapper.m_ChangerCar_Honda;
        public InputAction @Toyota => m_Wrapper.m_ChangerCar_Toyota;
        public InputActionMap Get() { return m_Wrapper.m_ChangerCar; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ChangerCarActions set) { return set.Get(); }
        public void SetCallbacks(IChangerCarActions instance)
        {
            if (m_Wrapper.m_ChangerCarActionsCallbackInterface != null)
            {
                @audi.started -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnAudi;
                @audi.performed -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnAudi;
                @audi.canceled -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnAudi;
                @volvo.started -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnVolvo;
                @volvo.performed -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnVolvo;
                @volvo.canceled -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnVolvo;
                @Lada.started -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnLada;
                @Lada.performed -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnLada;
                @Lada.canceled -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnLada;
                @Honda.started -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnHonda;
                @Honda.performed -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnHonda;
                @Honda.canceled -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnHonda;
                @Toyota.started -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnToyota;
                @Toyota.performed -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnToyota;
                @Toyota.canceled -= m_Wrapper.m_ChangerCarActionsCallbackInterface.OnToyota;
            }
            m_Wrapper.m_ChangerCarActionsCallbackInterface = instance;
            if (instance != null)
            {
                @audi.started += instance.OnAudi;
                @audi.performed += instance.OnAudi;
                @audi.canceled += instance.OnAudi;
                @volvo.started += instance.OnVolvo;
                @volvo.performed += instance.OnVolvo;
                @volvo.canceled += instance.OnVolvo;
                @Lada.started += instance.OnLada;
                @Lada.performed += instance.OnLada;
                @Lada.canceled += instance.OnLada;
                @Honda.started += instance.OnHonda;
                @Honda.performed += instance.OnHonda;
                @Honda.canceled += instance.OnHonda;
                @Toyota.started += instance.OnToyota;
                @Toyota.performed += instance.OnToyota;
                @Toyota.canceled += instance.OnToyota;
            }
        }
    }
    public ChangerCarActions @ChangerCar => new ChangerCarActions(this);
    public interface IChangerCarActions
    {
        void OnAudi(InputAction.CallbackContext context);
        void OnVolvo(InputAction.CallbackContext context);
        void OnLada(InputAction.CallbackContext context);
        void OnHonda(InputAction.CallbackContext context);
        void OnToyota(InputAction.CallbackContext context);
    }
}
